plugins {
  id 'kotlin-android'
  alias(libs.plugins.compose)
  alias(libs.plugins.kotlin.android)
  alias(libs.plugins.android.application)
  alias(libs.plugins.detekt)
  alias(libs.plugins.hilt)
  alias(libs.plugins.kover)
  alias(libs.plugins.firebase.appdistribution)
  alias(libs.plugins.firebase.crashlytics)
  alias(libs.plugins.kotlin.serialization)
  alias(libs.plugins.ksp)
  alias(libs.plugins.gms)
  alias(libs.plugins.ktlint)
}

apply {
  from '../buildscripts/coveralls.gradle'
  from '../buildscripts/detekt.gradle'
  from '../buildscripts/git-hooks.gradle'
  from '../buildscripts/kover.gradle'
}

android {
  compileSdk libs.versions.target.sdk.get().toInteger()
  defaultConfig {
    namespace "com.divinelink.aeropress.recipes"
    applicationId "aeropresscipe.divinelink.aeropress"

    minSdkVersion libs.versions.min.sdk.get().toInteger()
    targetSdk libs.versions.target.sdk.get().toInteger()
    versionCode libs.versions.version.code.get().toInteger()
    versionName libs.versions.version.name.get()

    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    ksp {
      arg("room.schemaLocation", "$projectDir/schemas")
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      testCoverageEnabled true
    }
  }

  buildFeatures {
    viewBinding true
    compose true
    buildConfig true
  }

  defaultConfig {
    resValue("string", "version_name", libs.versions.version.name.get())
  }

  android {
    compileOptions {
      coreLibraryDesugaringEnabled true

      sourceCompatibility JavaVersion.VERSION_17
      targetCompatibility JavaVersion.VERSION_17
    }
  }

  applicationVariants.all { variant ->
    kotlin.sourceSets {
      getByName(variant.name) {
        kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
      }
    }
  }

  lint {
    checkReleaseBuilds false
    abortOnError false
  }
}

dependencies {
  implementation(projects.coreUtil)

  // Compose
  implementation(platform(libs.compose.bom))
  implementation libs.material
  androidTestImplementation(platform(libs.compose.bom))
  implementation(libs.compose.material3)
  implementation(libs.compose.ui)
  implementation(libs.compose.ui.graphics)
  implementation(libs.compose.ui.tooling.preview)
  debugImplementation(libs.compose.ui.tooling)
  implementation(libs.compose.ui.foundation)

  // Firebase
  implementation(platform(libs.firebase.bom))
  implementation(libs.firebase.analytics)
  implementation(libs.firebase.crashlytics)

  // Core Android
  implementation(libs.androidx.core.ktx)
  implementation(libs.androidx.activity.ktx)
  implementation(libs.androidx.activity.compose)
  implementation(libs.androidx.fragment.ktx)
  implementation libs.androidx.constraintlayout
  implementation libs.androidx.cardview
  implementation libs.androidx.recyclerview

  // Database
  implementation(libs.room.runtime)
  implementation(libs.room.ktx)
  ksp(libs.room.compiler)
  testImplementation(libs.room.ktx)

  // DataStore
  implementation(libs.datastore)
  implementation(libs.datastore.preferences)
  implementation(libs.datastore.core)
  implementation(libs.datastore.preferences.core)

  // Dependency Injection
  implementation(libs.hilt.android)
  ksp(libs.hilt.android.compiler)
  testImplementation(libs.hilt.android.testing)
  androidTestImplementation(libs.hilt.android.testing)
  kspAndroidTest(libs.hilt.compiler)
  kspTest(libs.hilt.compiler)

  // Utils
  implementation(libs.material.progressbar)
  implementation(libs.kotlinx.datetime)
  implementation(libs.timber)
  implementation(libs.eventbus)
  implementation(libs.lottie)
  coreLibraryDesugaring(libs.android.tools.desugar)
  implementation libs.gson

  // Testing
  testImplementation(libs.junit)
  testImplementation(libs.kotlin.test.junit)
  testImplementation(libs.kotlinx.coroutines.test)
  testImplementation(libs.mockito)
  testImplementation(libs.mockito.kotlin)
  testImplementation(libs.truth)
  testImplementation(libs.androidx.test.ktx)
  androidTestImplementation(libs.androidx.test.ext.junit)
  androidTestImplementation(libs.androidx.compose.ui.test)
  debugImplementation(libs.compose.ui.test.manifest)
}
